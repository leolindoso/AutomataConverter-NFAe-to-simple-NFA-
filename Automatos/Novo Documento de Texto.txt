#include <iostream>
#include <string.h>
#include <math.h>
#include <iomanip>
using std::setw;

using namespace std;

class FuncaoPrograma
{
public:
    char **combinacoes;

    char ***transicoes; /// Sub de Combinações
    char **variaveis;
    char *estadoF;
    char *estadoI;
    bool *Uteis;
    char Estados[4][3] = {"q0","q1","q2","q3"};
    int chave,qnt_transicoes,qnt_variaveis;


    FuncaoPrograma(char **variaveis,int qntestados,int qntVariaveis,char *inicial,char *fim)
    {
        chave = qntestados;
        this->variaveis = variaveis;
        qnt_transicoes = pow(2,chave) - 1;
        estadoF = fim;
        estadoI = inicial;
        qnt_variaveis = qntVariaveis;

        /// Preenchimento booleano das Transições Uteis
        Uteis = new bool[qnt_transicoes];
        Uteis[0] = true;
        for(int i = 1; i < qnt_transicoes; i++) Uteis[i] = false;

    }
    ~FuncaoPrograma()
    {

        for(int i = 0; i < qnt_transicoes; i++)
            for(int j = 0; j < qnt_variaveis; j++) delete []transicoes[i][j];
        for(int i = 0; i < qnt_transicoes; i++) delete []transicoes[i];
        delete []transicoes;


    }

    void PreencherCombinacoes()
    {
        combinacoes = new char*[qnt_transicoes];
        for(int i = 0; i < qnt_transicoes; i++) combinacoes[i] = new char[10];

        transicoes = new char**[qnt_transicoes];
        for(int i = 0; i < qnt_transicoes; i++) transicoes[i] = new char*[qnt_variaveis];
        for(int i = 0; i < qnt_transicoes; i++)
            for(int j = 0; j < qnt_variaveis; j++) transicoes[i][j] = new char[10];



        if(chave > 0){
            strcpy(combinacoes[0],"q0");
            preencherTransicoes(combinacoes[0],0);
        }if(chave > 1){
            strcpy(combinacoes[1],"q1");
            preencherTransicoes(combinacoes[1],1);
            strcpy(combinacoes[2],"q0q1");
            preencherTransicoes(combinacoes[2],2);
        }if(chave > 2){
            strcpy(combinacoes[3],"q2");
            preencherTransicoes(combinacoes[3],3);
            strcpy(combinacoes[4],"q0q2");
            preencherTransicoes(combinacoes[4],4);
            strcpy(combinacoes[5],"q1q2");
            preencherTransicoes(combinacoes[5],5);
            strcpy(combinacoes[6],"q0q1q2");
            preencherTransicoes(combinacoes[6],6);
        }if(chave > 3){
            strcpy(combinacoes[7],"q3");
            preencherTransicoes(combinacoes[7],7);
            strcpy(combinacoes[8],"q0q3");
            preencherTransicoes(combinacoes[8],8);
            strcpy(combinacoes[9],"q1q3");
            preencherTransicoes(combinacoes[9],9);
            strcpy(combinacoes[10],"q2q3");
            preencherTransicoes(combinacoes[10],10);
            strcpy(combinacoes[11],"q0q1q3");
            preencherTransicoes(combinacoes[11],11);
            strcpy(combinacoes[12],"q0q2q3");
            preencherTransicoes(combinacoes[12],12);
            strcpy(combinacoes[13],"q1q2q3");
            preencherTransicoes(combinacoes[13],13);
            strcpy(combinacoes[14],"q0q1q2q3");
            preencherTransicoes(combinacoes[14],14);
        }
    }
    void preencherTransicoes(char *combinacao,int i)
    {
        for(int j = 0; j < qnt_variaveis; j++){
            cout<<"({"<<combinacao<<"},"<<variaveis[j]<<") = ";
            cin>>transicoes[i][j];
            //cout<<transicoes[i][j];
        }
    }

    void VerificarUteis()
    {
        int i,j,k;
        for(i = 0; i < qnt_transicoes;i++){
            for(j = 0; j < qnt_variaveis; j++){
                for(k = i; k < qnt_transicoes; k++){
                    if(strcmp(transicoes[i][j],combinacoes[k]) == 0 && !Uteis[k]){
                        Uteis[k] = true;
                        break;
                    }
                }
            }
            if(Uteis[i+1] == false && i < qnt_transicoes){
                while(!Uteis[i+1] && i < qnt_transicoes ) i++;
            }
        }
    }
    void NewFuncaoPrograma()
    {
        int i,j,k;
        cout<<"\nNova Funcao Programa\nEstado      ";
        for(k = 0; k < qnt_variaveis; k++) cout<<variaveis[k]<<"      ";
        cout<<"\n\n";
        for(i = 0; i < qnt_transicoes; i++)
        {
            if(Uteis[i]){
                cout<<combinacoes[i];
                for(k = 0; k < 12 - strlen(combinacoes[i]);k++) cout<<" ";
                for(j = 0; j < qnt_variaveis; j++)
                {
                    cout<<transicoes[i][j]<<"   ";
                }
                cout<<endl;
            }
        }
    }

};
